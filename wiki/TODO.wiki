= Tasks =

== ELO rating ==

Goals:

  * Implement ELO rating for registered users 
  * Create NPCs with different skill and ELO number (for NumberLineGame)
  * Adjust game settings to ELO rating (pointer width (for NumberLineGame),
    reaction delay, NPC skill level)

Open questions:

  * Handle multiplayer games
  * Define initial ELO number and account for inflation when new players are added -> This can be done by using provisional ELO numbers for new users (see http://stackoverflow.com/questions/1881310/elo-rating-system-start-value)

== Handicap calculation and evaluation ==

Goals:
  * Calculate handicap for user when opening new game
  * Handicap should be based on log entries
  * Adjust game settings to user handicap (i.e., increased level of difficulty for skilled users)

Considerations:
  * Generic interface for all games; each game will must implement a method for calculating the handicap and for adjusting the game settings
  * Normalized handicap value for all games (e.g. a value between 0.0 and 1.0 where 0.0 is the best possible and 1.0 the worst possible value)

Open questions:
  * Rely on order of log IDs to determine which log entries belong to one game? Answer: Create new action which is triggered at the end of each game and contains information about handicap values for all players.
  * Only use results for single player games (user vs. NPC)? Answer: No, use results from all game no matter how many players took part.
  * Default handicap value? Answer: In the case of the numberline game, there are three possibilities - use the worst, best possible value or the value in between those two values.
  * For the numberline game:
     * How does a suitable mapping of handicap value to pointer width look like? Answer: Use a linear mapping.
     * What are reasonable limits for pointer width? 

== Logging == 

Consider new table game_properties. A log entry will refer to this table via a foreign key constraint. This would allow for determining which users took part in one specific game.